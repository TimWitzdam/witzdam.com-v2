---
interface Props {
  animated?: boolean;
  spotify?: boolean;
  noPadding?: boolean;
  lessRounded?: boolean;
  rounded1?: boolean;
  noRounded?: boolean;
  link?: {
    url: string;
    label: string;
    newTab?: boolean;
  };
}

const { animated, spotify, noPadding, lessRounded, rounded1, noRounded, link } =
  Astro.props;
---

<div
  class="relative group/card"
  class:list={[
    {
      "card hover:scale-[1.02] transition-transform": animated,
      "p-8": !noPadding,
    },
  ]}
>
  <div
    class:list={[
      {
        "card-b": animated,
        "rounded-[3rem]": !lessRounded && !rounded1 && !noRounded,
        "rounded-[2rem]": lessRounded,
        "rounded-[1rem]": rounded1,
        "rounded-none": noRounded,
      },
    ]}
  >
  </div>
  <div
    class="card-background absolute -inset-[1px] -z-10 p-2 border border-white border-opacity-30"
    class:list={[
      {
        "bg-gradient-to-bl from-[#1db95430] to-[#1db95400]": spotify,
        "bg-gradient-to-b from-[#252525] to-[#1B1B1B]": !spotify,
        "rounded-[3rem]": !lessRounded && !rounded1 && !noRounded,
        "rounded-[2rem]": lessRounded,
        "rounded-[1rem]": rounded1,
        "rounded-none": noRounded,
      },
    ]}
    style="pointer-events: none; transform-origin: center center;"
  >
  </div>
  {
    link && (
      <a
        href={link.url}
        class="absolute w-full h-full top-0 left-0 z-10"
        aria-label={link.label}
        target={link.newTab ? "_blank" : "_self"}
      />
    )
  }
  <div class="card-content">
    <slot />
  </div>
</div>

<style>
  .card:hover .card-b {
    opacity: 1;
  }

  .card-b {
    content: "";
    height: 100%;
    left: 0px;
    opacity: 0;
    position: absolute;
    top: 0px;
    transition: opacity 500ms;
    width: 100%;
  }

  .card-b {
    background: radial-gradient(
      800px circle at var(--mouse-x) var(--mouse-y),
      rgba(255, 255, 255, 0.06),
      transparent 40%
    );
  }
</style>
